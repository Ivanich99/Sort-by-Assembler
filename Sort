%include "io.inc";

section .data ;

A times 5 dd 1

size equ $-A

a dd 10;

g dd 7;

m dd size;

section .text

global CMAIN

    CMAIN:

    mov ebp, esp;

    mov ecx, 0

    mov ebx, [a];

    

    MAIN:

    cmp ecx, size/4

    je START

    mov edx, 0

    mov eax, ebx

    div dword [g]

    mov [A+4*ecx], edx;

    PRINT_DEC 4, edx; 

    add ebx,10;

    add ecx,1

    NEWLINE

    jmp MAIN;

    

    START:

;если текущий эллемент равен или больше колличества элементов 

        mov edx, 0           ;чистим регистр

        mov edx, ecx         ;задаем последний элемент  i=N

        mov ecx, 0           ;указываем первый эллемент j=0

        jmp FOR1;

        

        e:

        add ecx, 1

        jmp FOR1

        

    FOR1:

    cmp ecx, edx             ;если текущий j<>N, переходим на вложеный цикл

    jl q

    

    sub edx, 1

    mov ecx, 0    

    cmp edx, 0

    je END

       

    q:                                  ;иначе переходим на вывод массива                  

    mov eax, [A+4*ecx]

    cmp eax, [A+4*ecx+4]     ;сравниваем текщий эллемент и следующий       ;если первое число меньше второго, увеличиваем счетчик

    jl e                  ;и переходим на 1for    

    

    mov ebx, [A+4*ecx] 

    mov eax, [A+4*ecx+4]                ;

    mov [A+4*ecx], eax                  ;Меняем местами

    mov [A+4*ecx+4], ebx                     

    jmp e

    

END:

NEWLINE

    mov ecx, 0

    MA:

    cmp ecx, size/4

    je EN

    PRINT_DEC 4, [A+4*ecx];

    add ecx,1

    NEWLINE

    jmp MA  

EN:

xor eax, eax

ret
